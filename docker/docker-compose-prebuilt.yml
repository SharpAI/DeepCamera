version: '2'
services:
  redis:
    image: arm32v7/redis:latest
    restart: always
    container_name: "redis"
    command: sh -c "rm -rf /data/*.rdb && redis-server --maxmemory 40mb --maxmemory-policy allkeys-lru --save \"\" --appendonly no --dbfilename \"\""
    ports:
      - 6379:6379
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
  broker:
    image: shareai/broker:arm32v7
    restart: always
    container_name: "broker"
    ports:
      - 1883:1883
      - 9001:9001
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
  camera:
    container_name: "camera"
    command: sh -c "if [ ! -f /opt/nvr/conf/conf.sqlite ]; then cp /opt/nvr/sql/shinobi.sample.sqlite /opt/nvr/conf/conf.sqlite -a ; fi && sleep 3 &&  (node /opt/nvr/cron.js &) && node /opt/nvr/camera.js"
    image: shareai/shinobi:arm32v7
    restart: always
    privileged: true
    environment:
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      TIMEZONE_OFFSET: ${TIMEZONE_OFFSET}
      IMAGE_DIR: "/opt/nvr/detector/images"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    links:
      - rtspserver:rtspserver
    ports:
      - 8080:8080
    volumes:
      - ./videos:/opt/nvr/videos
      - ./workaipython/sql:/opt/nvr/conf
      - /dev/shm/streams:/dev/shm/streams
      - /opt/nvr/detector/images:/opt/nvr/detector/images
      - ../src/shinobi/2018.03.15.14.50_patchs/camera.js:/opt/nvr/camera.js
  rtspserver:
    container_name: "rtspserver"
    command: sh -c "v4l2rtspserver"
    image: shareai/rtspserver:arm32v7
    restart: always
    privileged: true
    ports:
      - 8554:8554
    devices:
      - /dev/video0:/dev/video0
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
  flower:
    command: sh -c "flower --port=5555"
    image: shareai/flower:arm32v7
    restart: always
    ports:
      - 5555:5555
    depends_on:
      - "redis"
    links:
      - redis:redis
    environment:
      CELERY_BROKER_URL: redis://redis/0
      CELERY_RESULT_BACKEND: redis://redis/0
  face_detector:
    command: sh -c "cd /root/detection && python test.py && python worker.py worker --loglevel INFO -E -n detect -c 1 -Q detect"
    image: shareai/face_detector:arm32v7
    container_name: "face_detector"
    env_file:
      - ./production_1.env
    environment:
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
    restart: always
    depends_on:
      - "redis"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - ./workaipython/ro_serialno:/dev/ro_serialno
      - ./workaipython/groupid.txt:/data/usr/com.deep.workai/cache/groupid.txt
      - ./workaipython/cache:/data/runtime/cache
      - /opt/nvr/detector/images:/opt/nvr/detector/images
      - /opt/nvr/detector/frames:/opt/nvr/videos/frames
      - ../src/face_detection:/root/detection
      - /dev/shm/streams:/dev/shm/streams
  workaipython:
    command: sh -c "cd /data/runtime/src/ && ls /data/runtime -l &&  ls /data/runtime/src && ./start_embedding_only.sh"
    image: shareai/workaipython:arm32v7
    container_name: "workaipython"
    env_file:
      - ./cluster.env
    environment:
      RUNTIME_BASEDIR: "/data/runtime/src/"
    restart: always
    depends_on:
      - "redis"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    links:
      - redis:redis
    privileged: true
    ports:
      - 5000:5000
    volumes:
      - ./workaipython/ro_serialno:/dev/ro_serialno
      - ./workaipython/groupid.txt:/data/usr/com.deep.workai/cache/groupid.txt
      - ./workaipython/cache:/data/runtime/cache
      - ./workaipython/data:/data/runtime/src/data
      - /opt/nvr/detector/images:/opt/nvr/detector/images
      - ../src/embedding:/data/runtime/src
      - /opt/nvr/detector/frames:/opt/nvr/videos/frames
      - /var/run/docker.sock:/var/run/docker.sock
  detector_plugin:
    container_name: "detector_plugin"
    depends_on:
      - "camera"
      - "flower"
      - "redis"
      - "broker"
    command: sh -c "export && cd /opt/nvr/detector && npm install && node /opt/nvr/detector/index.js"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    image: shareai/shinobi:arm32v7
    restart: always
    privileged: true
    env_file:
      - ./production_1.env
      - ./cluster.env
    environment:
      TIMEZONE_OFFSET: ${TIMEZONE_OFFSET}
      IMAGE_DIR: "/opt/nvr/detector/images"
    links:
      - camera:camera
      - redis:redis
      - flower:flower
      - workaipython:workaipython
    volumes:
      - ./videos:/opt/nvr/videos
      - ./workaipython/ro_serialno:/dev/ro_serialno
      - ./workaipython/groupid.txt:/data/usr/com.deep.workai/cache/groupid.txt
      - /opt/nvr/detector/images:/opt/nvr/detector/images
      - /opt/nvr/detector/face_motion:/opt/nvr/detector/face_motion
      - /opt/nvr/detector/face_cropped:/opt/nvr/detector/face_cropped
      - /var/run/docker.sock:/var/run/docker.sock
      - ../src/detector/deepeye.js:/opt/nvr/detector/deepeye.js
      - ../src/detector/index.js:/opt/nvr/detector/index.js
      - ../src/detector/motion.js:/opt/nvr/detector/motion.js
      #- ../src/detector/maintainer.js:/opt/nvr/detector/maintainer.js
      - ../src/detector/workai-v2.js:/opt/nvr/detector/workai-v2.js
      - ../src/detector/workai.js:/opt/nvr/detector/workai.js
      - ../src/detector/upload.js:/opt/nvr/detector/upload.js
      - ../src/detector/makegif.js:/opt/nvr/detector/makegif.js
      - ../src/detector/package.json:/opt/nvr/detector/package.json
      - ../src/detector/conf.json:/opt/nvr/detector/conf.json
      - ../src/detector/waitqueue.js:/opt/nvr/detector/waitqueue.js
      - ../src/detector/timeline.js:/opt/nvr/detector/timeline.js
      - ../src/detector/visit.js:/opt/nvr/detector/visit.js
      - ../src/detector/face_motions.js:/opt/nvr/detector/face_motions.js
      - ../src/detector/mqttgif.js:/opt/nvr/detector/mqttgif.js
      - ../src/detector/realtime_message.js:/opt/nvr/detector/realtime_message.js
      - ../src/detector/upload_listener.js:/opt/nvr/detector/upload_listener.js
      - ../src/detector/config:/opt/nvr/detector/config
